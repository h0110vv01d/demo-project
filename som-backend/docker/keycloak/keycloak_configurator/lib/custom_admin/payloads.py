from lib.settings import SOM_CORE_USERS_CLIENT_ID, SOM_CORE_SPRING_BOOT_ADMIN_CLIENT_ID

SOM_CORE_SPRING_BOOT_ADMIN_CLIENT_CREATE_PAYLOAD \
    = {"clientId": SOM_CORE_SPRING_BOOT_ADMIN_CLIENT_ID,
                        "surrogateAuthRequired": False,
                        "enabled": True,
                        "alwaysDisplayInConsole": False,
                        "clientAuthenticatorType": "client-secret",
                        "redirectUris": [],
                        "webOrigins": [],
                        "notBefore": 0,
                        "bearerOnly": False,
                        "consentRequired": False,
                        "standardFlowEnabled": False,
                        "implicitFlowEnabled": False,
                        "directAccessGrantsEnabled": False,
                        "serviceAccountsEnabled": True,
                        "publicClient": False,
                        "frontchannelLogout": False,
                        "protocol": "openid-connect",
                        "attributes": {
                            "backchannel.logout.session.required": "true",
                            "backchannel.logout.revoke.offline.tokens": "false",
                            "request.uris": None,
                            "saml.artifact.binding": "false",
                            "saml.server.signature": "false",
                            "saml.server.signature.keyinfo.ext": "false",
                            "saml.assertion.signature": "false",
                            "saml.client.signature": "false",
                            "saml.encrypt": "false",
                            "saml.authnstatement": "false",
                            "saml.onetimeuse.condition": "false",
                            "saml_force_name_id_format": "false",
                            "saml.multivalued.roles": "false",
                            "saml.force.post.binding": "false",
                            "exclude.session.state.from.auth.response": "false",
                            "oauth2.device.authorization.grant.enabled": "false",
                            "oidc.ciba.grant.enabled": "false",
                            "use.refresh.tokens": "true",
                            "id.token.as.detached.signature": "false",
                            "tls.client.certificate.bound.access.tokens": "false",
                            "require.pushed.authorization.requests": "false",
                            "client_credentials.use_refresh_token": "false",
                            "display.on.consent.screen": "false",
                            "oauth2.device.polling.interval": None},
                        "authenticationFlowBindingOverrides": {},
                        "fullScopeAllowed": True,
                        "nodeReRegistrationTimeout": -1,
                        "defaultClientScopes": ["web-origins", "roles",
                                                "profile", "email"],
                        "optionalClientScopes": ["address", "phone",
                                                 "offline_access",
                                                 "microprofile-jwt"],
                        "access": {"view": True, "configure": True,
                                   "manage": True},
                        "authorizationServicesEnabled": ""}
SOM_CORE_USERS_CLIENT_CREATE_PAYLOAD \
    = {"id": "5ad67a61-c530-4874-aa70-e5daa7f13a67",
       "clientId": SOM_CORE_USERS_CLIENT_ID,
       "surrogateAuthRequired": False,
       "enabled": True,
       "alwaysDisplayInConsole": False,
       "clientAuthenticatorType": "client-secret",
       "redirectUris": ["http://localhost:8081"],
       "webOrigins": [],
       "notBefore": 0,
       "bearerOnly": False,
       "consentRequired": False,
       "standardFlowEnabled": True,
       "implicitFlowEnabled": False,
       "directAccessGrantsEnabled": True,
       "serviceAccountsEnabled": False,
       "publicClient": True,
       "frontchannelLogout": False,
       "protocol": "openid-connect",
       "attributes": {"backchannel.logout.session.required": "true",
                      "backchannel.logout.revoke.offline.tokens": "false",
                      "request.uris": None,
                      "saml.artifact.binding": "false",
                      "saml.server.signature": "false",
                      "saml.server.signature.keyinfo.ext": "false",
                      "saml.assertion.signature": "false",
                      "saml.client.signature": "false",
                      "saml.encrypt": "false",
                      "saml.authnstatement": "false",
                      "saml.onetimeuse.condition": "false",
                      "saml_force_name_id_format": "false",
                      "saml.multivalued.roles": "false",
                      "saml.force.post.binding": "false",
                      "exclude.session.state.from.auth.response": "false",
                      "oauth2.device.authorization.grant.enabled": "false",
                      "oidc.ciba.grant.enabled": "false",
                      "use.refresh.tokens": "true",
                      "id.token.as.detached.signature": "false",
                      "tls.client.certificate.bound.access.tokens": "false",
                      "require.pushed.authorization.requests": "false",
                      "client_credentials.use_refresh_token": "false",
                      "display.on.consent.screen": "false",
                      "oauth2.device.polling.interval": None},
       "authenticationFlowBindingOverrides": {},
       "fullScopeAllowed": True,
       "nodeReRegistrationTimeout": -1,
       "defaultClientScopes": ["web-origins",
                               "profile",
                               "roles",
                               "email"],
       "optionalClientScopes": ["address",
                                "phone",
                                "offline_access",
                                "microprofile-jwt"],
       "access": {"view": True,
                  "configure": True,
                  "manage": True},
       "authorizationServicesEnabled": ""}
